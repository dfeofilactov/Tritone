План развития:

Triton
Техническое задание
=======================================================
0. Проектирование логики приложения
1. Разработка UI/UX
2. Верстка макетов
3. Разработка программной логики
4. Интеграция UI в приложение
5. Тесты

=======================================================
А теперь подробней:
0. Проектирование логики приложения
        
        На этом этапе, первым делом, необходимо выяснить 
    для каких целей и для кого создается данное приложение.  
    Почему и как это приложение может помочь людям, занимающимся
    некоторыми, заранее определенными, видами деятельности. 
    Спроектировать приложение с учетом выведенных данных.
        Составить список нужной для работы входной информации
    для вывода результатов в определенном формате, согласованным 
    с пользователем. Составить план предпологаемых действий, следуя
    которым пользователь сообщит программе свои намерения и желание
    получить некий результат. На основе совершенных пользователем 
    действий и анализа его желаний, программа составляет план решения 
    поставленной задачи и в ранее определенной форме выводит 
    результаты. Предпологается, что пользователь будет решать 
    несколько типов общих задач для составления палитры. Для 
    достижения успешного результата мы обязаны наделить программный
    продукт некоторым базовым функционалом. 

    1. Спросить у пользователя чем заняться? (Экран приветствия)
    2. Предоставить выбор типа решаемой задачи (Создать проект)
    3. Запрос необходимой второстепенной информации (Имя, тип проекта...)
    4. Определить способ решения выбранной задачи 
    5. Предоставить инструменты для работы над проектом (Рабочее пространство)
    6. Предоставить инструменты управления проектом (Сохранить, Экспорт...)

    Определить типы задач:
    !!!

    В конечном итоге мы должны получить фундамент для построения 
    пользовательского интерфейса и логики приложения. Необходимо составить
    список всех окон, используемых в приложении, кратко описать их и продумать
    связи между этими окнами для обеспечения наилучшей работоспособности программы. 